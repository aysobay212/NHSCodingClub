combinations = 1 #last section is ALWAYS 1, total vertical poles is n+1, this is the (n+1)th
# #this is the nth path
master_list = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
#len of 20
for z in range(0, 19): #generate unique lists for each vertical pole
    new_list = []
    for x in range(1, 21): #index 0 arrays
        i = 0 #left index
        j = x #right index
        new_list.append(sum(master_list[z][i:j])) #note to self: 0:2 means 0th and 1th NOT 2th
    master_list.append(new_list)
print(*master_list, sep='\n')
for y in master_list:
    combinations += sum(y)
print(combinations)

###
note to self
draw this out and a pattern will form
starting from the rightmost pole, '1', there will only ever be 1 path
then the 2nd pole will contain (grid y dimension) '1' in the list of paths
when you get up to the 3rd pole, you can add from the 0th - 1th list items in the previous pole
to generalise this, it is: nth pole combinations = select (n-1)th list from items 0 to (n-1) for each (grid x dimension)
'1's in the first list

###
